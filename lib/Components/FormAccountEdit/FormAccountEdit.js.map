{"version":3,"sources":["../../../src/Components/FormAccountEdit/FormAccountEdit.jsx"],"names":["FormAccountEdit","localInfo","size","get","format","props","onchangeOptin","bind","onchangeMobile","onchangePhone","setLabelElementForInput","idLabel","idTrad","newlabel","document","createElement","setAttribute","innerHTML","intl","formatMessage","id","defaultMessage","elemLabel","getElementById","after","e","value","setOptIn","status","countryData","number","setMobile","setPhone","data","getLastnameValue","getFirstnameValue","getBirthdateValue","getMobileValue","getPhoneValue","render","updateAddress","getOptinValue","Component","proptypes","PropTypes","object","isRequired","defaultProps"],"mappings":"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","file":"FormAccountEdit.js","sourcesContent":["import React, { Component } from 'react';\nimport { PropTypes} from \"prop-types\";\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport moment from 'moment/src/moment';\nimport IntlTelInput from \"react-intl-tel-input\";\nimport AddressForm from \"../AddressForm/AddressForm\";\nimport {isValidField} from '../../Helpers/ValidatorFieldsHelper';\n\n/**\n * Class : Account Form\n */\nclass FormAccountEdit extends Component {\n\n  static getLastnameValue(localInfo) {\n    return localInfo.size > 0\n      ? localInfo.get('values').get('lastname')\n      : '';\n  }\n\n  static getFirstnameValue(localInfo) {\n    return localInfo.size > 0\n      ? localInfo.get('values').get('firstname')\n      : '';\n  }\n\n  static getBirthdateValue(localInfo) {\n    return localInfo.size > 0\n      ? moment(localInfo.get('values').get('birthdate'), 'YYYY-MM-DD HH:mm:ssZZ').format('DD/MM/YYYY')\n      : '';\n  }\n\n  static getOptinValue(localInfo) {\n    return localInfo.size > 0\n      ? localInfo.get('values').get('optIn')\n      : '';\n  }\n\n  static getMobileValue(localInfo) {\n    return localInfo.size > 0\n      ? localInfo.get('values').get('mobile')\n      : '';\n  }\n\n  static getPhoneValue(localInfo) {\n    return localInfo.size > 0\n      ? localInfo.get('values').get('phone')\n      : '';\n  }\n\n  // Define Constructor\n  constructor(props) {\n    super(props);\n\n    this.onchangeOptin = this.onchangeOptin.bind(this);\n    this.onchangeMobile = this.onchangeMobile.bind(this);\n    this.onchangePhone = this.onchangePhone.bind(this);\n  }\n\n  /**\n   * Executed after the first render only on the client side\n   */\n  componentDidMount() {\n    // We add element label for input mobile and phone\n    this.setLabelElementForInput('account_user_mobile', 'rp.checkout.customer.mobile');\n    this.setLabelElementForInput('account_user_phone', 'rp.checkout.customer.phone');\n  }\n\n  /**\n   *\n   * @param idLabel\n   * @param idTrad\n   */\n  setLabelElementForInput(idLabel, idTrad) {\n    let newlabel = document.createElement(\"Label\");\n    newlabel.setAttribute('class', 'control-label paddingLeftPhone');\n    newlabel.setAttribute('for', idLabel);\n    newlabel.innerHTML = this.props.intl.formatMessage({id: idTrad, defaultMessage: 'phone number'});\n\n    let elemLabel = document.getElementById(idLabel);\n    elemLabel.setAttribute('data-control', 'true');\n    elemLabel.after(newlabel);\n\n    document.getElementById(idLabel).setAttribute('required', 'required');\n  }\n\n  /**\n   *\n   * @param e\n   */\n  onchangeOptin(e) {\n    const value = this.props.localInfo.get('values').get('optIn');\n    this.props.setOptIn(value);\n  }\n\n  /**\n   *\n   * @param status\n   * @param value\n   * @param countryData\n   * @param number\n   * @param id\n   */\n  onchangeMobile(status, value, countryData, number, id) {\n    this.props.setMobile(value);\n  }\n\n  /**\n   *\n   * @param status\n   * @param value\n   * @param countryData\n   * @param number\n   * @param id\n   */\n  onchangePhone(status, value, countryData, number, id) {\n    this.props.setPhone(value);\n  }\n\n\n  render() {\n    const { formatMessage } = this.props.intl;\n    const {\n      data\n    } = this.props;\n\n    return (\n      <div id=\"accountForm\" className=\"checkout_part_content accountForm\">\n        <div className=\"panel-body\">\n          <form>\n            <div className=\"row form_content_wrapper\">\n              <div className=\"col-xs-12 \">\n                <h5><FormattedMessage id=\"rp.forms.required.input\" defaultMessage=\"required input\"/></h5>\n              </div>\n              <div className=\"form-group\">\n                <div className=\"col-xs-12\">\n                  <input type=\"text\"\n                         id=\"account_user_lastname\"\n                         disabled=\"disabled\"\n                         required=\"required\"\n                         placeholder={formatMessage({\n                           id: 'rp.checkout.customer.lastname',\n                           defaultMessage: 'lastname'\n                         })}\n                         data-control=\"true\"\n                         value={FormAccountEdit.getLastnameValue(data.localInfo) || \"\"}\n                  />\n                  <label htmlFor=\"account_user_lastname\" className=\"control-label\">\n                    <FormattedMessage id=\"rp.checkout.customer.lastname\" defaultMessage=\"lastname\"/>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row form_content_wrapper \">\n              <div className=\"form-group\">\n                <div className=\"col-xs-12\">\n                  <input type=\"text\"\n                         id=\"account_user_firstname\"\n                         disabled=\"disabled\"\n                         required=\"required\"\n                         placeholder={formatMessage({\n                           id: 'rp.checkout.customer.firstname',\n                           defaultMessage: 'firstname'\n                         })}\n                         data-control=\"true\"\n                         value={FormAccountEdit.getFirstnameValue(data.localInfo) || \"\"}\n                  />\n                  <label htmlFor=\"account_user_firstname\" className=\"control-label\">\n                    <FormattedMessage id=\"rp.checkout.customer.firstname\" defaultMessage=\"firstname\"/>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row form_content_wrapper \">\n              <div className=\"col-sm-12\">\n                <div className=\"form-group\">\n                  <input type=\"text\"\n                         id=\"account_user_birthdate\"\n                         disabled=\"disabled\"\n                         required=\"required\"\n                         className=\"rp_date\"\n                         placeholder={formatMessage({\n                           id: 'rp.checkout.customer.birthdate',\n                           defaultMessage: 'birthdate'\n                         })}\n                         data-control=\"true\"\n                         value={FormAccountEdit.getBirthdateValue(data.localInfo) || \"\"}\n                  />\n                  <label htmlFor=\"account_user_birthdate\" className=\"control-label\">\n                    <FormattedMessage id=\"rp.checkout.customer.birthdate\" defaultMessage=\"birthdate\"/>\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row form_content_wrapper\">\n              <div className=\"col-sm-6 no-padding\">\n                <div className=\"form-group\">\n                  <div className=\"col-xs-12\">\n                    <IntlTelInput preferredCountries={['fr']}\n                                  css={['intl-tel-input', 'form-control']}\n                                  fieldId={'account_user_mobile'}\n                                  utilsScript={'libphonenumber.js'}\n                                  format\n                                  defaultValue=''\n                                  autoPlaceholder\n                                  autoHideDialCode\n                                  onPhoneNumberChange={this.onchangeMobile}\n                                  onPhoneNumberBlur={this.onchangeMobile}\n                                  value={FormAccountEdit.getMobileValue(data.localInfo) || \"\"}\n                                  formatOnInit={false}\n                    />\n                    <div className=\"phone-icon-elements\">\n                      <span className=\"phone-checker phone-icon fa fa-2x form-control-feedback withoutprepend fa-check\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-sm-6 no-padding\">\n                <div className=\"form-group\">\n                  <div className=\"col-xs-12\">\n                    <IntlTelInput preferredCountries={['fr']}\n                                  css={['intl-tel-input', 'form-control']}\n                                  fieldId={'account_user_phone'}\n                                  utilsScript={'libphonenumber.js'}\n                                  format\n                                  defaultValue=''\n                                  autoPlaceholder\n                                  autoHideDialCode\n                                  onPhoneNumberChange={this.onchangePhone}\n                                  onPhoneNumberBlur={this.onchangePhone}\n                                  value={FormAccountEdit.getPhoneValue(data.localInfo) || \"\"}\n                                  defaultCountry={'fr'}\n                                  formatOnInit={false}\n                    />\n\n                    <div className=\"phone-icon-elements\">\n                      <span className=\"phone-checker phone-icon fa fa-2x form-control-feedback withoutprepend fa-exclamation-triangle\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <AddressForm\n              localInfo={data.localInfo}\n              render={render}\n              updateAddress={updateAddress}\n            />\n\n            <div className=\"col-md-12 cgv-option\">\n              <div className=\"form-group\">\n                <div className=\"col-md-12\">\n                  <div className=\"checkbox\">\n                    <input type=\"checkbox\"\n                           id=\"account_user_optIn\"\n                           required=\"required\"\n                           defaultChecked={FormAccountEdit.getOptinValue(data.localInfo) || false}\n                           value=\"1\"\n                           onChange={(e) => this.onchangeOptin(e)}\n                    />\n                    <label htmlFor=\"account_user_optIn\">\n                      <FormattedMessage id=\"rp.forms.checkout.payment.optin\" defaultMessage=\"optIn\"/>\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-xs-12 cgv\">\n              <FormattedMessage id=\"rp.forms.checkout.cnil\" defaultMessage=\"cnil\"/>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-xs-12\"><b><b>\n                <button className=\"btn-main btn-full btn-lg small-margin-top\" type=\"submit\">\n                  <FormattedMessage id=\"rp.checkout.customer.next.btn\" defaultMessage=\"accept and continue\"/>\n                </button>\n              </b></b>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nFormAccountEdit.proptypes = {\n  data: PropTypes.object.isRequired,\n  // onClickEditAccount: PropTypes.func.isRequired,\n  // setAddress: PropTypes.func.isRequired,\n  // setFirstname: PropTypes.func.isRequired,\n  // setLastname: PropTypes.func.isRequired,\n  // setMobile: PropTypes.func.isRequired,\n  // setOptIn: PropTypes.func.isRequired,\n  // setPhone: PropTypes.func.isRequired,\n  // setEmail: PropTypes.func.isRequired,\n  // setBirthdate: PropTypes.func.isRequired,\n  // setPassword: PropTypes.func.isRequired,\n};\n\nFormAccountEdit.defaultProps = {\n  data: {},\n};\n\nexport default injectIntl(FormAccountEdit);"]}