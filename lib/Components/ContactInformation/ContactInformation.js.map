{"version":3,"sources":["../../../src/Components/ContactInformation/ContactInformation.jsx"],"names":["ContactInformation","props","localInfo","renderSvgBook","getEmailValue","getFirstnameValue","getMobileValue","getAddress1Value","getAddress2Value","getZipcodeValue","getCityValue","getCountryValue","data","renderQuickInfoRecap","size","get","moment","format","undefined","Map","Component","proptypes","PropTypes","object","isRequired","defaultProps"],"mappings":"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","file":"ContactInformation.js","sourcesContent":["import React, { Component } from 'react';\nimport { PropTypes} from \"prop-types\";\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Map, fromJS } from 'immutable';\n\n/**\n * Class : Quick Address Recap\n */\nclass ContactInformation extends Component {\n\n  // Define Constructor\n  constructor(props) {\n    super(props);\n  }\n\n  static getLastnameValue(localInfo) {\n    return localInfo.size > 0\n      ? localInfo.get('lastname')\n      : '';\n  }\n\n  static getFirstnameValue(localInfo) {\n    return localInfo.size > 0\n      ? localInfo.get('firstname')\n      : '';\n  }\n\n  static getBirthdateValue(localInfo) {\n    return localInfo.size > 0\n      ? moment(localInfo.get('birthdate'), 'YYYY-MM-DD HH:mm:ssZZ').format('DD/MM/YYYY')\n      : '';\n  }\n\n  static getOptinValue(localInfo) {\n    return localInfo.size > 0\n      ? localInfo.get('optIn')\n      : '';\n  }\n\n  static getMobileValue(localInfo) {\n    return localInfo.size > 0\n      ? localInfo.get('mobile')\n      : '';\n  }\n\n  static getPhoneValue(localInfo) {\n    return localInfo.size > 0\n      ? localInfo.get('phone')\n      : '';\n  }\n\n  static getEmailValue(localInfo) {\n    return localInfo.size > 0\n      ? localInfo.get('email')\n      : '';\n  }\n\n  static getAddress1Value(localInfo) {\n    return localInfo.size !== undefined\n      ? localInfo.get('addresses', new Map()).get('address1')\n      : '';\n  }\n\n  static getAddress2Value(localInfo) {\n    return localInfo.size !== undefined\n      ? localInfo.get('addresses', new Map()).get('address2')\n      : '';\n  }\n\n  static getZipcodeValue(localInfo) {\n    return localInfo.size !== undefined\n      ? localInfo.get('addresses', new Map()).get('zipcode')\n      : '';\n  }\n\n  static getCityValue(localInfo) {\n    return localInfo.size !== undefined\n      ? localInfo.get('addresses', new Map()).get('city')\n      : '';\n  }\n\n  static getCountryValue(localInfo) {\n    return localInfo.size !== undefined\n      ? localInfo.get('addresses', new Map()).get('country')\n      : '';\n  }\n\n  static renderSvgBook() {\n    return <svg width=\"24px\"\n                height=\"24px\"\n                viewBox=\"0 0 24 24\"\n                version=\"1.1\" >\n      <g id=\"icon-/-adress-/-black\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <rect id=\"Rectangle\" stroke=\"#585858\" x=\"5.5\" y=\"1.5\" width=\"15\" height=\"21\" rx=\"3\"></rect>\n        <circle id=\"Oval-4-Copy\" stroke=\"#585858\" cx=\"13\" cy=\"10\" r=\"2\"></circle>\n        <path d=\"M4,11.5 L7,11.5\" id=\"Path-5-Copy\" stroke=\"#585858\" stroke-linecap=\"round\"></path>\n        <path d=\"M4,15.5 L7,15.5\" id=\"Path-5-Copy-2\" stroke=\"#585858\" stroke-linecap=\"round\"></path>\n        <path d=\"M4,7.5 L7,7.5\" id=\"Path-5\" stroke=\"#585858\" stroke-linecap=\"round\"></path>\n        <path d=\"M10,15 C9.99958562,13 10.999588,12 13.0000073,12 C15.0004265,12 16.0004289,13 16.0000145,15\" id=\"Path-6\" stroke=\"#585858\"></path>\n      </g>\n    </svg>\n  }\n\n  renderQuickInfoRecap(localInfo) {\n    return (\n      <div className=\"quickInfoRecap col-xs-12\">\n        <span className=\"bookSvg\">{ContactInformation.renderSvgBook()}</span>\n        <p>Informations de contact</p>\n        <div className=\"col-xs-4\">\n          <p><FormattedMessage id=\"rp.checkout.customer.email.label\" defaultMessage=\"email\"/></p>\n          <p><FormattedMessage id=\"rp.checkout.customer.lastname\" defaultMessage=\"lastname\"/></p>\n          <p><FormattedMessage id=\"rp.checkout.customer.firstname\" defaultMessage=\"firstname\"/></p>\n          <p><FormattedMessage id=\"rp.checkout.customer.mobile\" defaultMessage=\"mobile\"/></p>\n          <p><FormattedMessage id=\"rp.checkout.billingaddress.address1\" defaultMessage=\"address1\"/></p>\n        </div>\n        <div className=\"col-xs-6\">\n          <p>{ContactInformation.getEmailValue(localInfo) || \"\"}</p>\n          <p>{ContactInformation.getFirstnameValue(localInfo) || \"\"}</p>\n          <p>{ContactInformation.getFirstnameValue(localInfo) || \"\"}</p>\n          <p>{ContactInformation.getMobileValue(localInfo) || \"\"}</p>\n\n          <p>{ContactInformation.getAddress1Value(localInfo) || \"\"}\n            {ContactInformation.getAddress2Value(localInfo) || \"\"}\n            {ContactInformation.getZipcodeValue(localInfo) || \"\"}\n            {ContactInformation.getCityValue(localInfo) || \"\"}\n            {ContactInformation.getCountryValue(localInfo) || \"\"}</p>\n        </div>\n        <button className=\"btnEditContact\"\n                onClick={() => \"\"}\n                type=\"submit\">\n          <FormattedMessage id=\"rp.checkout.edit.data.button.label\" defaultMessage=\"edit\"/>\n        </button>\n      </div>\n    );\n  }\n\n  // renderAccountForm() {\n  //   return (\n  //     <div id=\"accountForm\" className=\"checkout_part_content accountForm\">\n  //       <div className=\"panel-body\">\n  //         <AccountForm\n  //           contact={this.props.contact}\n  //           localInfo={this.props.localInfo}\n  //           render={this.props.render}\n  //           setAddress={this.props.setAddress}\n  //           setFirstname={this.props.setFirstname}\n  //           setLastname={this.props.setLastname}\n  //           setMobile={this.props.setMobile}\n  //           setOptIn={this.props.setOptIn}\n  //           setPhone={this.props.setPhone}\n  //           setEmail={this.props.setEmail}\n  //           setBirthdate={this.props.setBirthdate}\n  //           setPassword={this.props.setPassword}\n  //         />\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n  render() {\n    const {\n      data,\n    } = this.props;\n\n    return (\n      <div className='contactInformation'>\n        { this.renderQuickInfoRecap(fromJS(data.localInfo)) }\n        {/*{ this.renderAccountForm() }*/}\n      </div>\n    );\n  }\n}\n\nContactInformation.proptypes = {\n  data: PropTypes.object.isRequired,\n  // render: PropTypes.object.isRequired,\n  // contact: PropTypes.func.isRequired,\n  // setAddress: PropTypes.func.isRequired,\n  // setFirstname: PropTypes.func.isRequired,\n  // setLastname: PropTypes.func.isRequired,\n  // setMobile: PropTypes.func.isRequired,\n  // setOptIn: PropTypes.func.isRequired,\n  // setPhone: PropTypes.func.isRequired,\n  // setEmail: PropTypes.func.isRequired,\n  // setBirthdate: PropTypes.func.isRequired,\n  // setPassword: PropTypes.func.isRequired,\n};\n\nContactInformation.defaultProps = {\n  data: {},\n};\n\nexport default injectIntl(ContactInformation);"]}