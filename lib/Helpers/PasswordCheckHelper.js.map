{"version":3,"sources":["../../src/Helpers/PasswordCheckHelper.js"],"names":["colors","grayColor","greenColor","stateGreenColor","stateYellowColor","stateOrangeColor","stateRedColor","patterns","digits","minLength","upperCases","checkStrengthPassword","password","newPasswordElement","document","querySelector","item1","item2","item3","strength","length","style","color","test","changeProgressbarPassword","score","width","backgroundColor","background","checkPasswordConfirm","firstPassword","secondPassword"],"mappings":"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","file":"PasswordCheckHelper.js","sourcesContent":["/**\n * Generic colors for progress bar password\n * @type {{ grayColor: string,\n *          greenColor: string,\n *          stateGreenColor: string,\n *          stateYellowColor: string,\n *          stateOrangeColor: string,\n *          stateRedColor: string }}\n */\nconst colors = {\n  grayColor: \"#b0b0b0\",\n  greenColor: \"#18c229\",\n  stateGreenColor: \"#04AC00\",\n  stateYellowColor: \"#FFD700\",\n  stateOrangeColor: \"#F07424\",\n  stateRedColor: \"#E93838\",\n};\n\n/**\n * Regex patterns and restrictions\n * @type {{const: RegExp}}\n */\nconst patterns = {\n  digits: /[0-9]/,\n  minLength: 8,\n  upperCases: /[A-Z]/,\n};\n\n/**\n * Check Strength Password\n * @param password\n */\nexport const checkStrengthPassword = (password) => {\n\n  const newPasswordElement = document.querySelector('.new-password');\n  // items for validation password\n  const item1 = newPasswordElement.querySelector('.pwd-item1');\n  const item2 = newPasswordElement.querySelector('.pwd-item2');\n  const item3 = newPasswordElement.querySelector('.pwd-item3');\n\n  let strength = 0;\n\n  if (password.length >= 1) {\n    strength += 25;\n\n    if (password.length >= patterns.minLength) {\n      strength += 25;\n      item1.style.color = colors.greenColor;\n    } else {\n      item1.style.color = colors.grayColor;\n    }\n\n    if (patterns.upperCases.test(password)) {\n      strength += 25;\n      item2.style.color = colors.greenColor;\n    } else {\n      item2.style.color = colors.grayColor;\n    }\n\n    if (patterns.digits.test(password)) {\n      strength += 25;\n      item3.style.color = colors.greenColor;\n    } else {\n      item3.style.color = colors.grayColor;\n    }\n\n    if ((password.length >= patterns.minLength) && (patterns.upperCases.test(password)) && (patterns.digits.test(password))) {\n      strength = 100;\n    }\n\n  } else {\n    strength = 0;\n    // initialize color list required password\n    item1.style.color = colors.grayColor;\n    item2.style.color = colors.grayColor;\n    item3.style.color = colors.grayColor;\n  }\n\n  changeProgressbarPassword(strength);\n};\n\n/**\n * Change style for Progressbar Password\n * @param strength\n */\nexport const changeProgressbarPassword = (strength) => {\n\n  const score = document.querySelector('.progress-bar');\n\n  switch (strength) {\n    case 25:\n      score.style.width = \"25%\";\n      score.style.backgroundColor = colors.stateRedColor;\n      break;\n    case 50:\n      score.style.width = \"50%\";\n      score.style.backgroundColor = colors.stateOrangeColor;\n      break;\n    case 75:\n      score.style.width = \"75%\";\n      score.style.backgroundColor = colors.stateYellowColor;\n      break;\n    case 100:\n      score.style.width = \"calc(100% - 40px)\";\n      score.style.backgroundColor = colors.stateGreenColor;\n      break;\n    default:\n      score.style.width = \"0\";\n      score.style.background = \"none\";\n      break;\n  }\n};\n\n/**\n * Validation Second Password equality first password\n * @param firstPassword\n * @param secondPassword\n * @returns {boolean}\n */\nexport const checkPasswordConfirm = (firstPassword, secondPassword) => (\n  firstPassword  === secondPassword\n);"]}