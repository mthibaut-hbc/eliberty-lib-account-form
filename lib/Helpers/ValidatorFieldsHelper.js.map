{"version":3,"sources":["../../src/Helpers/ValidatorFieldsHelper.js"],"names":["restrictions","patterns","mailformat","dateformat","zipcodeformat","minStringLength","isValidField","type","value","length","test"],"mappings":";;;;;AAAA;AACA,IAAMA,eAAe;AACnBC,YAAU;AACRC,gBAAY,+CADJ;AAERC,gBAAY,8DAFJ;AAGRC,mBAAe,yCAHP,CAGoD;AAHpD,GADS;AAMnBC,mBAAiB;AANE,CAArB;;AAUA;;;;;AAKO,IAAMC,sCAAe,SAAfA,YAAe,CAACC,IAAD,EAAOC,KAAP,EAAiB;;AAE3C,UAAQD,IAAR;AACE,SAAK,OAAL;AACA,SAAK,UAAL;AACE,UAAIC,MAAMC,MAAN,GAAeT,aAAaK,eAA5B,IAA+C,CAACL,aAAaC,QAAb,CAAsBC,UAAtB,CAAiCQ,IAAjC,CAAsCF,KAAtC,CAApD,EAAkG;AAChG,eAAO,KAAP;AACD;AACD;AACF,SAAM,WAAN;AACE,UAAIA,MAAMC,MAAN,KAAiB,CAAjB,IAAsB,CAACT,aAAaC,QAAb,CAAsBE,UAAtB,CAAiCO,IAAjC,CAAsCF,KAAtC,CAA3B,EAAyE;AACvE,eAAO,KAAP;AACD;AACD;AACF,SAAM,OAAN;AACE;AACF,SAAK,OAAL;AACE;AACF,SAAM,WAAN;AACA,SAAK,UAAL;AACA,SAAM,UAAN;AACA,SAAM,UAAN;AACA,SAAM,SAAN;AACA,SAAM,MAAN;AACA,SAAM,SAAN;AACA,SAAK,UAAL;AACE,UAAIA,MAAMC,MAAN,GAAeT,aAAaK,eAAhC,EAAiD;AAC/C,eAAO,KAAP;AACD;AACD;AACF;AACE,aAAO,IAAP;AA7BJ;AA+BA,SAAO,IAAP;AACD,CAlCM","file":"ValidatorFieldsHelper.js","sourcesContent":["//regex patterns and restrictions\nconst restrictions = {\n  patterns: {\n    mailformat: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n    dateformat: /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/,\n    zipcodeformat: /^([A-Z]+[A-Z]?\\-)?[0-9]{1,2} ?[0-9]{3}$/,   // Code postal au format 31 100 ou 31100\n  },\n  minStringLength: 2,\n};\n\n\n/**\n *\n * @param type\n * @param value\n */\nexport const isValidField = (type, value) => {\n\n  switch (type) {\n    case 'email':\n    case 'username':\n      if (value.length < restrictions.minStringLength || !restrictions.patterns.mailformat.test(value)) {\n        return false;\n      }\n      break;\n    case  'birthdate':\n      if (value.length === 0 || !restrictions.patterns.dateformat.test(value)) {\n        return false;\n      }\n      break;\n    case  'phone':\n      break;\n    case 'movil':\n      break;\n    case  'firstname':\n    case 'lastname':\n    case  'address1':\n    case  'address2':\n    case  'zipCode':\n    case  'city':\n    case  'country':\n    case 'password':\n      if (value.length < restrictions.minStringLength) {\n        return false;\n      }\n      break;\n    default:\n      return true;\n  }\n  return true;\n};"]}